/*! URI.js v1.14.1 http://medialize.github.io/URI.js/ */
/* build contains: URI.js, URITemplate.js */
(function (k, v) { "object" === typeof exports ? module.exports = v(require("./punycode"), require("./IPv6"), require("./SecondLevelDomains")) : "function" === typeof define && define.amd ? define(["./punycode", "./IPv6", "./SecondLevelDomains"], v) : k.URI = v(k.punycode, k.IPv6, k.SecondLevelDomains, k) })(this, function (k, v, m, q) {
    function d(a, b) { if (!(this instanceof d)) return new d(a, b); void 0 === a && (a = "undefined" !== typeof location ? location.href + "" : ""); this.href(a); return void 0 !== b ? this.absoluteTo(b) : this } function x(a) {
        return a.replace(/([.*+?^=!:${}()|[\]\/\\])/g,
        "\\$1")
    } function y(a) { return void 0 === a ? "Undefined" : String(Object.prototype.toString.call(a)).slice(8, -1) } function n(a) { return "Array" === y(a) } function g(a, b) { var c, d; if (n(b)) { c = 0; for (d = b.length; c < d; c++) if (!g(a, b[c])) return !1; return !0 } var e = y(b); c = 0; for (d = a.length; c < d; c++) if ("RegExp" === e) { if ("string" === typeof a[c] && a[c].match(b)) return !0 } else if (a[c] === b) return !0; return !1 } function f(a, b) {
        if (!n(a) || !n(b) || a.length !== b.length) return !1; a.sort(); b.sort(); for (var c = 0, d = a.length; c < d; c++) if (a[c] !== b[c]) return !1;
        return !0
    } function h(a) { return escape(a) } function z(a) { return encodeURIComponent(a).replace(/[!'()*]/g, h).replace(/\*/g, "%2A") } function w(a) { return function (b, c) { if (void 0 === b) return this._parts[a] || ""; this._parts[a] = b || null; this.build(!c); return this } } function s(a, b) { return function (c, d) { if (void 0 === c) return this._parts[a] || ""; null !== c && (c += "", c.charAt(0) === b && (c = c.substring(1))); this._parts[a] = c; this.build(!d); return this } } var l = q && q.URI; d.version = "1.14.1"; var e = d.prototype, r = Object.prototype.hasOwnProperty;
    d._parts = function () { return { protocol: null, username: null, password: null, hostname: null, urn: null, port: null, path: null, query: null, fragment: null, duplicateQueryParameters: d.duplicateQueryParameters, escapeQuerySpace: d.escapeQuerySpace } }; d.duplicateQueryParameters = !1; d.escapeQuerySpace = !0; d.protocol_expression = /^[a-z][a-z0-9.+-]*$/i; d.idn_expression = /[^a-z0-9\.-]/i; d.punycode_expression = /(xn--)/i; d.ip4_expression = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/; d.ip6_expression = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/;
    d.find_uri_expression = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?\u00ab\u00bb\u201c\u201d\u2018\u2019]))/ig; d.findUri = { start: /\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi, end: /[\s\r\n]|$/, trim: /[`!()\[\]{};:'".,<>?\u00ab\u00bb\u201c\u201d\u201e\u2018\u2019]+$/ }; d.defaultPorts = { http: "80", https: "443", ftp: "21", gopher: "70", ws: "80", wss: "443" }; d.invalid_hostname_characters =
    /[^a-zA-Z0-9\.-]/; d.domAttributes = { a: "href", blockquote: "cite", link: "href", base: "href", script: "src", form: "action", img: "src", area: "href", iframe: "src", embed: "src", source: "src", track: "src", input: "src", audio: "src", video: "src" }; d.getDomAttribute = function (a) { if (a && a.nodeName) { var b = a.nodeName.toLowerCase(); return "input" === b && "image" !== a.type ? void 0 : d.domAttributes[b] } }; d.encode = z; d.decode = decodeURIComponent; d.iso8859 = function () { d.encode = escape; d.decode = unescape }; d.unicode = function () {
        d.encode = z; d.decode =
        decodeURIComponent
    }; d.characters = {
        pathname: { encode: { expression: /%(24|26|2B|2C|3B|3D|3A|40)/ig, map: { "%24": "$", "%26": "&", "%2B": "+", "%2C": ",", "%3B": ";", "%3D": "=", "%3A": ":", "%40": "@" } }, decode: { expression: /[\/\?#]/g, map: { "/": "%2F", "?": "%3F", "#": "%23" } } }, reserved: {
            encode: {
                expression: /%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/ig, map: {
                    "%3A": ":", "%2F": "/", "%3F": "?", "%23": "#", "%5B": "[", "%5D": "]", "%40": "@", "%21": "!", "%24": "$", "%26": "&", "%27": "'", "%28": "(", "%29": ")", "%2A": "*", "%2B": "+", "%2C": ",",
                    "%3B": ";", "%3D": "="
                }
            }
        }
    }; d.encodeQuery = function (a, b) { var c = d.encode(a + ""); void 0 === b && (b = d.escapeQuerySpace); return b ? c.replace(/%20/g, "+") : c }; d.decodeQuery = function (a, b) { a += ""; void 0 === b && (b = d.escapeQuerySpace); try { return d.decode(b ? a.replace(/\+/g, "%20") : a) } catch (c) { return a } }; d.recodePath = function (a) { a = (a + "").split("/"); for (var b = 0, c = a.length; b < c; b++) a[b] = d.encodePathSegment(d.decode(a[b])); return a.join("/") }; d.decodePath = function (a) {
        a = (a + "").split("/"); for (var b = 0, c = a.length; b < c; b++) a[b] = d.decodePathSegment(a[b]);
        return a.join("/")
    }; var u = { encode: "encode", decode: "decode" }, t, A = function (a, b) { return function (c) { try { return d[b](c + "").replace(d.characters[a][b].expression, function (c) { return d.characters[a][b].map[c] }) } catch (p) { return c } } }; for (t in u) d[t + "PathSegment"] = A("pathname", u[t]); d.encodeReserved = A("reserved", "encode"); d.parse = function (a, b) {
        var c; b || (b = {}); c = a.indexOf("#"); -1 < c && (b.fragment = a.substring(c + 1) || null, a = a.substring(0, c)); c = a.indexOf("?"); -1 < c && (b.query = a.substring(c + 1) || null, a = a.substring(0,
        c)); "//" === a.substring(0, 2) ? (b.protocol = null, a = a.substring(2), a = d.parseAuthority(a, b)) : (c = a.indexOf(":"), -1 < c && (b.protocol = a.substring(0, c) || null, b.protocol && !b.protocol.match(d.protocol_expression) ? b.protocol = void 0 : "//" === a.substring(c + 1, c + 3) ? (a = a.substring(c + 3), a = d.parseAuthority(a, b)) : (a = a.substring(c + 1), b.urn = !0))); b.path = a; return b
    }; d.parseHost = function (a, b) {
        var c = a.indexOf("/"), d; -1 === c && (c = a.length); "[" === a.charAt(0) ? (d = a.indexOf("]"), b.hostname = a.substring(1, d) || null, b.port = a.substring(d +
        2, c) || null, "/" === b.port && (b.port = null)) : a.indexOf(":") !== a.lastIndexOf(":") ? (b.hostname = a.substring(0, c) || null, b.port = null) : (d = a.substring(0, c).split(":"), b.hostname = d[0] || null, b.port = d[1] || null); b.hostname && "/" !== a.substring(c).charAt(0) && (c++, a = "/" + a); return a.substring(c) || "/"
    }; d.parseAuthority = function (a, b) { a = d.parseUserinfo(a, b); return d.parseHost(a, b) }; d.parseUserinfo = function (a, b) {
        var c = a.indexOf("/"), p = a.lastIndexOf("@", -1 < c ? c : a.length - 1); -1 < p && (-1 === c || p < c) ? (c = a.substring(0, p).split(":"),
        b.username = c[0] ? d.decode(c[0]) : null, c.shift(), b.password = c[0] ? d.decode(c.join(":")) : null, a = a.substring(p + 1)) : (b.username = null, b.password = null); return a
    }; d.parseQuery = function (a, b) { if (!a) return {}; a = a.replace(/&+/g, "&").replace(/^\?*&*|&+$/g, ""); if (!a) return {}; for (var c = {}, p = a.split("&"), e = p.length, g, f, l = 0; l < e; l++) g = p[l].split("="), f = d.decodeQuery(g.shift(), b), g = g.length ? d.decodeQuery(g.join("="), b) : null, r.call(c, f) ? ("string" === typeof c[f] && (c[f] = [c[f]]), c[f].push(g)) : c[f] = g; return c }; d.build = function (a) {
        var b =
        ""; a.protocol && (b += a.protocol + ":"); a.urn || !b && !a.hostname || (b += "//"); b += d.buildAuthority(a) || ""; "string" === typeof a.path && ("/" !== a.path.charAt(0) && "string" === typeof a.hostname && (b += "/"), b += a.path); "string" === typeof a.query && a.query && (b += "?" + a.query); "string" === typeof a.fragment && a.fragment && (b += "#" + a.fragment); return b
    }; d.buildHost = function (a) { var b = ""; if (a.hostname) b = d.ip6_expression.test(a.hostname) ? b + ("[" + a.hostname + "]") : b + a.hostname; else return ""; a.port && (b += ":" + a.port); return b }; d.buildAuthority =
    function (a) { return d.buildUserinfo(a) + d.buildHost(a) }; d.buildUserinfo = function (a) { var b = ""; a.username && (b += d.encode(a.username), a.password && (b += ":" + d.encode(a.password)), b += "@"); return b }; d.buildQuery = function (a, b, c) { var p = "", e, g, f, l; for (g in a) if (r.call(a, g) && g) if (n(a[g])) for (e = {}, f = 0, l = a[g].length; f < l; f++) void 0 !== a[g][f] && void 0 === e[a[g][f] + ""] && (p += "&" + d.buildQueryParameter(g, a[g][f], c), !0 !== b && (e[a[g][f] + ""] = !0)); else void 0 !== a[g] && (p += "&" + d.buildQueryParameter(g, a[g], c)); return p.substring(1) };
    d.buildQueryParameter = function (a, b, c) { return d.encodeQuery(a, c) + (null !== b ? "=" + d.encodeQuery(b, c) : "") }; d.addQuery = function (a, b, c) { if ("object" === typeof b) for (var p in b) r.call(b, p) && d.addQuery(a, p, b[p]); else if ("string" === typeof b) void 0 === a[b] ? a[b] = c : ("string" === typeof a[b] && (a[b] = [a[b]]), n(c) || (c = [c]), a[b] = (a[b] || []).concat(c)); else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter"); }; d.removeQuery = function (a, b, c) {
        var p; if (n(b)) for (c = 0, p = b.length; c < p; c++) a[b[c]] =
        void 0; else if ("object" === typeof b) for (p in b) r.call(b, p) && d.removeQuery(a, p, b[p]); else if ("string" === typeof b) if (void 0 !== c) if (a[b] === c) a[b] = void 0; else { if (n(a[b])) { p = a[b]; var e = {}, g, f; if (n(c)) for (g = 0, f = c.length; g < f; g++) e[c[g]] = !0; else e[c] = !0; g = 0; for (f = p.length; g < f; g++) void 0 !== e[p[g]] && (p.splice(g, 1), f--, g--); a[b] = p } } else a[b] = void 0; else throw new TypeError("URI.addQuery() accepts an object, string as the first parameter");
    }; d.hasQuery = function (a, b, c, p) {
        if ("object" === typeof b) {
            for (var e in b) if (r.call(b,
            e) && !d.hasQuery(a, e, b[e])) return !1; return !0
        } if ("string" !== typeof b) throw new TypeError("URI.hasQuery() accepts an object, string as the name parameter"); switch (y(c)) {
            case "Undefined": return b in a; case "Boolean": return a = Boolean(n(a[b]) ? a[b].length : a[b]), c === a; case "Function": return !!c(a[b], b, a); case "Array": return n(a[b]) ? (p ? g : f)(a[b], c) : !1; case "RegExp": return n(a[b]) ? p ? g(a[b], c) : !1 : Boolean(a[b] && a[b].match(c)); case "Number": c = String(c); case "String": return n(a[b]) ? p ? g(a[b], c) : !1 : a[b] === c; default: throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter");
        }
    }; d.commonPath = function (a, b) { var c = Math.min(a.length, b.length), d; for (d = 0; d < c; d++) if (a.charAt(d) !== b.charAt(d)) { d--; break } if (1 > d) return a.charAt(0) === b.charAt(0) && "/" === a.charAt(0) ? "/" : ""; if ("/" !== a.charAt(d) || "/" !== b.charAt(d)) d = a.substring(0, d).lastIndexOf("/"); return a.substring(0, d + 1) }; d.withinString = function (a, b, c) {
        c || (c = {}); var e = c.start || d.findUri.start, g = c.end || d.findUri.end, f = c.trim || d.findUri.trim, l = /[a-z0-9-]=["']?$/i; for (e.lastIndex = 0; ;) {
            var h = e.exec(a); if (!h) break; h = h.index; if (c.ignoreHtml) {
                var m =
                a.slice(Math.max(h - 3, 0), h); if (m && l.test(m)) continue
            } var m = h + a.slice(h).search(g), k = a.slice(h, m).replace(f, ""); c.ignore && c.ignore.test(k) || (m = h + k.length, k = b(k, h, m, a), a = a.slice(0, h) + k + a.slice(m), e.lastIndex = h + k.length)
        } e.lastIndex = 0; return a
    }; d.ensureValidHostname = function (a) {
        if (a.match(d.invalid_hostname_characters)) {
            if (!k) throw new TypeError('Hostname "' + a + '" contains characters other than [A-Z0-9.-] and Punycode.js is not available'); if (k.toASCII(a).match(d.invalid_hostname_characters)) throw new TypeError('Hostname "' +
            a + '" contains characters other than [A-Z0-9.-]');
        }
    }; d.noConflict = function (a) { if (a) return a = { URI: this.noConflict() }, q.URITemplate && "function" === typeof q.URITemplate.noConflict && (a.URITemplate = q.URITemplate.noConflict()), q.IPv6 && "function" === typeof q.IPv6.noConflict && (a.IPv6 = q.IPv6.noConflict()), q.SecondLevelDomains && "function" === typeof q.SecondLevelDomains.noConflict && (a.SecondLevelDomains = q.SecondLevelDomains.noConflict()), a; q.URI === this && (q.URI = l); return this }; e.build = function (a) {
        if (!0 === a) this._deferred_build =
        !0; else if (void 0 === a || this._deferred_build) this._string = d.build(this._parts), this._deferred_build = !1; return this
    }; e.clone = function () { return new d(this) }; e.valueOf = e.toString = function () { return this.build(!1)._string }; e.protocol = w("protocol"); e.username = w("username"); e.password = w("password"); e.hostname = w("hostname"); e.port = w("port"); e.query = s("query", "?"); e.fragment = s("fragment", "#"); e.search = function (a, b) { var c = this.query(a, b); return "string" === typeof c && c.length ? "?" + c : c }; e.hash = function (a, b) {
        var c =
        this.fragment(a, b); return "string" === typeof c && c.length ? "#" + c : c
    }; e.pathname = function (a, b) { if (void 0 === a || !0 === a) { var c = this._parts.path || (this._parts.hostname ? "/" : ""); return a ? d.decodePath(c) : c } this._parts.path = a ? d.recodePath(a) : "/"; this.build(!b); return this }; e.path = e.pathname; e.href = function (a, b) {
        var c; if (void 0 === a) return this.toString(); this._string = ""; this._parts = d._parts(); var e = a instanceof d, g = "object" === typeof a && (a.hostname || a.path || a.pathname); a.nodeName && (g = d.getDomAttribute(a), a = a[g] ||
        "", g = !1); !e && g && void 0 !== a.pathname && (a = a.toString()); if ("string" === typeof a || a instanceof String) this._parts = d.parse(String(a), this._parts); else if (e || g) for (c in e = e ? a._parts : a, e) r.call(this._parts, c) && (this._parts[c] = e[c]); else throw new TypeError("invalid input"); this.build(!b); return this
    }; e.is = function (a) {
        var b = !1, c = !1, e = !1, g = !1, f = !1, h = !1, l = !1, k = !this._parts.urn; this._parts.hostname && (k = !1, c = d.ip4_expression.test(this._parts.hostname), e = d.ip6_expression.test(this._parts.hostname), b = c || e, f = (g =
        !b) && m && m.has(this._parts.hostname), h = g && d.idn_expression.test(this._parts.hostname), l = g && d.punycode_expression.test(this._parts.hostname)); switch (a.toLowerCase()) { case "relative": return k; case "absolute": return !k; case "domain": case "name": return g; case "sld": return f; case "ip": return b; case "ip4": case "ipv4": case "inet4": return c; case "ip6": case "ipv6": case "inet6": return e; case "idn": return h; case "url": return !this._parts.urn; case "urn": return !!this._parts.urn; case "punycode": return l } return null
    };
    var B = e.protocol, C = e.port, D = e.hostname; e.protocol = function (a, b) { if (void 0 !== a && a && (a = a.replace(/:(\/\/)?$/, ""), !a.match(d.protocol_expression))) throw new TypeError('Protocol "' + a + "\" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]"); return B.call(this, a, b) }; e.scheme = e.protocol; e.port = function (a, b) {
        if (this._parts.urn) return void 0 === a ? "" : this; if (void 0 !== a && (0 === a && (a = null), a && (a += "", ":" === a.charAt(0) && (a = a.substring(1)), a.match(/[^0-9]/)))) throw new TypeError('Port "' + a + '" contains characters other than [0-9]');
        return C.call(this, a, b)
    }; e.hostname = function (a, b) { if (this._parts.urn) return void 0 === a ? "" : this; if (void 0 !== a) { var c = {}; d.parseHost(a, c); a = c.hostname } return D.call(this, a, b) }; e.host = function (a, b) { if (this._parts.urn) return void 0 === a ? "" : this; if (void 0 === a) return this._parts.hostname ? d.buildHost(this._parts) : ""; d.parseHost(a, this._parts); this.build(!b); return this }; e.authority = function (a, b) {
        if (this._parts.urn) return void 0 === a ? "" : this; if (void 0 === a) return this._parts.hostname ? d.buildAuthority(this._parts) :
        ""; d.parseAuthority(a, this._parts); this.build(!b); return this
    }; e.userinfo = function (a, b) { if (this._parts.urn) return void 0 === a ? "" : this; if (void 0 === a) { if (!this._parts.username) return ""; var c = d.buildUserinfo(this._parts); return c.substring(0, c.length - 1) } "@" !== a[a.length - 1] && (a += "@"); d.parseUserinfo(a, this._parts); this.build(!b); return this }; e.resource = function (a, b) {
        var c; if (void 0 === a) return this.path() + this.search() + this.hash(); c = d.parse(a); this._parts.path = c.path; this._parts.query = c.query; this._parts.fragment =
        c.fragment; this.build(!b); return this
    }; e.subdomain = function (a, b) {
        if (this._parts.urn) return void 0 === a ? "" : this; if (void 0 === a) { if (!this._parts.hostname || this.is("IP")) return ""; var c = this._parts.hostname.length - this.domain().length - 1; return this._parts.hostname.substring(0, c) || "" } c = this._parts.hostname.length - this.domain().length; c = this._parts.hostname.substring(0, c); c = new RegExp("^" + x(c)); a && "." !== a.charAt(a.length - 1) && (a += "."); a && d.ensureValidHostname(a); this._parts.hostname = this._parts.hostname.replace(c,
        a); this.build(!b); return this
    }; e.domain = function (a, b) {
        if (this._parts.urn) return void 0 === a ? "" : this; "boolean" === typeof a && (b = a, a = void 0); if (void 0 === a) { if (!this._parts.hostname || this.is("IP")) return ""; var c = this._parts.hostname.match(/\./g); if (c && 2 > c.length) return this._parts.hostname; c = this._parts.hostname.length - this.tld(b).length - 1; c = this._parts.hostname.lastIndexOf(".", c - 1) + 1; return this._parts.hostname.substring(c) || "" } if (!a) throw new TypeError("cannot set domain empty"); d.ensureValidHostname(a);
        !this._parts.hostname || this.is("IP") ? this._parts.hostname = a : (c = new RegExp(x(this.domain()) + "$"), this._parts.hostname = this._parts.hostname.replace(c, a)); this.build(!b); return this
    }; e.tld = function (a, b) {
        if (this._parts.urn) return void 0 === a ? "" : this; "boolean" === typeof a && (b = a, a = void 0); if (void 0 === a) { if (!this._parts.hostname || this.is("IP")) return ""; var c = this._parts.hostname.lastIndexOf("."), c = this._parts.hostname.substring(c + 1); return !0 !== b && m && m.list[c.toLowerCase()] ? m.get(this._parts.hostname) || c : c } if (a) if (a.match(/[^a-zA-Z0-9-]/)) if (m &&
        m.is(a)) c = new RegExp(x(this.tld()) + "$"), this._parts.hostname = this._parts.hostname.replace(c, a); else throw new TypeError('TLD "' + a + '" contains characters other than [A-Z0-9]'); else { if (!this._parts.hostname || this.is("IP")) throw new ReferenceError("cannot set TLD on non-domain host"); c = new RegExp(x(this.tld()) + "$"); this._parts.hostname = this._parts.hostname.replace(c, a) } else throw new TypeError("cannot set TLD empty"); this.build(!b); return this
    }; e.directory = function (a, b) {
        if (this._parts.urn) return void 0 ===
        a ? "" : this; if (void 0 === a || !0 === a) { if (!this._parts.path && !this._parts.hostname) return ""; if ("/" === this._parts.path) return "/"; var c = this._parts.path.length - this.filename().length - 1, c = this._parts.path.substring(0, c) || (this._parts.hostname ? "/" : ""); return a ? d.decodePath(c) : c } c = this._parts.path.length - this.filename().length; c = this._parts.path.substring(0, c); c = new RegExp("^" + x(c)); this.is("relative") || (a || (a = "/"), "/" !== a.charAt(0) && (a = "/" + a)); a && "/" !== a.charAt(a.length - 1) && (a += "/"); a = d.recodePath(a); this._parts.path =
        this._parts.path.replace(c, a); this.build(!b); return this
    }; e.filename = function (a, b) {
        if (this._parts.urn) return void 0 === a ? "" : this; if (void 0 === a || !0 === a) { if (!this._parts.path || "/" === this._parts.path) return ""; var c = this._parts.path.lastIndexOf("/"), c = this._parts.path.substring(c + 1); return a ? d.decodePathSegment(c) : c } c = !1; "/" === a.charAt(0) && (a = a.substring(1)); a.match(/\.?\//) && (c = !0); var e = new RegExp(x(this.filename()) + "$"); a = d.recodePath(a); this._parts.path = this._parts.path.replace(e, a); c ? this.normalizePath(b) :
        this.build(!b); return this
    }; e.suffix = function (a, b) {
        if (this._parts.urn) return void 0 === a ? "" : this; if (void 0 === a || !0 === a) { if (!this._parts.path || "/" === this._parts.path) return ""; var c = this.filename(), e = c.lastIndexOf("."); if (-1 === e) return ""; c = c.substring(e + 1); c = /^[a-z0-9%]+$/i.test(c) ? c : ""; return a ? d.decodePathSegment(c) : c } "." === a.charAt(0) && (a = a.substring(1)); if (c = this.suffix()) e = a ? new RegExp(x(c) + "$") : new RegExp(x("." + c) + "$"); else { if (!a) return this; this._parts.path += "." + d.recodePath(a) } e && (a = d.recodePath(a),
        this._parts.path = this._parts.path.replace(e, a)); this.build(!b); return this
    }; e.segment = function (a, b, c) {
        var d = this._parts.urn ? ":" : "/", e = this.path(), g = "/" === e.substring(0, 1), e = e.split(d); void 0 !== a && "number" !== typeof a && (c = b, b = a, a = void 0); if (void 0 !== a && "number" !== typeof a) throw Error('Bad segment "' + a + '", must be 0-based integer'); g && e.shift(); 0 > a && (a = Math.max(e.length + a, 0)); if (void 0 === b) return void 0 === a ? e : e[a]; if (null === a || void 0 === e[a]) if (n(b)) {
            e = []; a = 0; for (var f = b.length; a < f; a++) if (b[a].length ||
            e.length && e[e.length - 1].length) e.length && !e[e.length - 1].length && e.pop(), e.push(b[a])
        } else { if (b || "string" === typeof b) "" === e[e.length - 1] ? e[e.length - 1] = b : e.push(b) } else b ? e[a] = b : e.splice(a, 1); g && e.unshift(""); return this.path(e.join(d), c)
    }; e.segmentCoded = function (a, b, c) {
        var e, g; "number" !== typeof a && (c = b, b = a, a = void 0); if (void 0 === b) { a = this.segment(a, b, c); if (n(a)) for (e = 0, g = a.length; e < g; e++) a[e] = d.decode(a[e]); else a = void 0 !== a ? d.decode(a) : void 0; return a } if (n(b)) for (e = 0, g = b.length; e < g; e++) b[e] = d.decode(b[e]);
        else b = "string" === typeof b || b instanceof String ? d.encode(b) : b; return this.segment(a, b, c)
    }; var E = e.query; e.query = function (a, b) {
        if (!0 === a) return d.parseQuery(this._parts.query, this._parts.escapeQuerySpace); if ("function" === typeof a) { var c = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace), e = a.call(this, c); this._parts.query = d.buildQuery(e || c, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace); this.build(!b); return this } return void 0 !== a && "string" !== typeof a ? (this._parts.query =
        d.buildQuery(a, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace), this.build(!b), this) : E.call(this, a, b)
    }; e.setQuery = function (a, b, c) {
        var e = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace); if ("string" === typeof a || a instanceof String) e[a] = void 0 !== b ? b : null; else if ("object" === typeof a) for (var g in a) r.call(a, g) && (e[g] = a[g]); else throw new TypeError("URI.addQuery() accepts an object, string as the name parameter"); this._parts.query = d.buildQuery(e, this._parts.duplicateQueryParameters,
        this._parts.escapeQuerySpace); "string" !== typeof a && (c = b); this.build(!c); return this
    }; e.addQuery = function (a, b, c) { var e = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace); d.addQuery(e, a, void 0 === b ? null : b); this._parts.query = d.buildQuery(e, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace); "string" !== typeof a && (c = b); this.build(!c); return this }; e.removeQuery = function (a, b, c) {
        var e = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace); d.removeQuery(e, a, b); this._parts.query =
        d.buildQuery(e, this._parts.duplicateQueryParameters, this._parts.escapeQuerySpace); "string" !== typeof a && (c = b); this.build(!c); return this
    }; e.hasQuery = function (a, b, c) { var e = d.parseQuery(this._parts.query, this._parts.escapeQuerySpace); return d.hasQuery(e, a, b, c) }; e.setSearch = e.setQuery; e.addSearch = e.addQuery; e.removeSearch = e.removeQuery; e.hasSearch = e.hasQuery; e.normalize = function () { return this._parts.urn ? this.normalizeProtocol(!1).normalizeQuery(!1).normalizeFragment(!1).build() : this.normalizeProtocol(!1).normalizeHostname(!1).normalizePort(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build() };
    e.normalizeProtocol = function (a) { "string" === typeof this._parts.protocol && (this._parts.protocol = this._parts.protocol.toLowerCase(), this.build(!a)); return this }; e.normalizeHostname = function (a) { this._parts.hostname && (this.is("IDN") && k ? this._parts.hostname = k.toASCII(this._parts.hostname) : this.is("IPv6") && v && (this._parts.hostname = v.best(this._parts.hostname)), this._parts.hostname = this._parts.hostname.toLowerCase(), this.build(!a)); return this }; e.normalizePort = function (a) {
        "string" === typeof this._parts.protocol &&
        this._parts.port === d.defaultPorts[this._parts.protocol] && (this._parts.port = null, this.build(!a)); return this
    }; e.normalizePath = function (a) {
        if (this._parts.urn || !this._parts.path || "/" === this._parts.path) return this; var b, c = this._parts.path, e = "", g, f; "/" !== c.charAt(0) && (b = !0, c = "/" + c); c = c.replace(/(\/(\.\/)+)|(\/\.$)/g, "/").replace(/\/{2,}/g, "/"); b && (e = c.substring(1).match(/^(\.\.\/)+/) || "") && (e = e[0]); for (; ;) {
            g = c.indexOf("/.."); if (-1 === g) break; else if (0 === g) { c = c.substring(3); continue } f = c.substring(0, g).lastIndexOf("/");
            -1 === f && (f = g); c = c.substring(0, f) + c.substring(g + 3)
        } b && this.is("relative") && (c = e + c.substring(1)); c = d.recodePath(c); this._parts.path = c; this.build(!a); return this
    }; e.normalizePathname = e.normalizePath; e.normalizeQuery = function (a) { "string" === typeof this._parts.query && (this._parts.query.length ? this.query(d.parseQuery(this._parts.query, this._parts.escapeQuerySpace)) : this._parts.query = null, this.build(!a)); return this }; e.normalizeFragment = function (a) {
        this._parts.fragment || (this._parts.fragment = null, this.build(!a));
        return this
    }; e.normalizeSearch = e.normalizeQuery; e.normalizeHash = e.normalizeFragment; e.iso8859 = function () { var a = d.encode, b = d.decode; d.encode = escape; d.decode = decodeURIComponent; this.normalize(); d.encode = a; d.decode = b; return this }; e.unicode = function () { var a = d.encode, b = d.decode; d.encode = z; d.decode = unescape; this.normalize(); d.encode = a; d.decode = b; return this }; e.readable = function () {
        var a = this.clone(); a.username("").password("").normalize(); var b = ""; a._parts.protocol && (b += a._parts.protocol + "://"); a._parts.hostname &&
        (a.is("punycode") && k ? (b += k.toUnicode(a._parts.hostname), a._parts.port && (b += ":" + a._parts.port)) : b += a.host()); a._parts.hostname && a._parts.path && "/" !== a._parts.path.charAt(0) && (b += "/"); b += a.path(!0); if (a._parts.query) { for (var c = "", e = 0, g = a._parts.query.split("&"), f = g.length; e < f; e++) { var h = (g[e] || "").split("="), c = c + ("&" + d.decodeQuery(h[0], this._parts.escapeQuerySpace).replace(/&/g, "%26")); void 0 !== h[1] && (c += "=" + d.decodeQuery(h[1], this._parts.escapeQuerySpace).replace(/&/g, "%26")) } b += "?" + c.substring(1) } return b +=
        d.decodeQuery(a.hash(), !0)
    }; e.absoluteTo = function (a) {
        var b = this.clone(), c = ["protocol", "username", "password", "hostname", "port"], e, g; if (this._parts.urn) throw Error("URNs do not have any generally defined hierarchical components"); a instanceof d || (a = new d(a)); b._parts.protocol || (b._parts.protocol = a._parts.protocol); if (this._parts.hostname) return b; for (e = 0; g = c[e]; e++) b._parts[g] = a._parts[g]; b._parts.path ? ".." === b._parts.path.substring(-2) && (b._parts.path += "/") : (b._parts.path = a._parts.path, b._parts.query ||
        (b._parts.query = a._parts.query)); "/" !== b.path().charAt(0) && (a = a.directory(), b._parts.path = (a ? a + "/" : "") + b._parts.path, b.normalizePath()); b.build(); return b
    }; e.relativeTo = function (a) {
        var b = this.clone().normalize(), c, e, g, f; if (b._parts.urn) throw Error("URNs do not have any generally defined hierarchical components"); a = (new d(a)).normalize(); c = b._parts; e = a._parts; g = b.path(); f = a.path(); if ("/" !== g.charAt(0)) throw Error("URI is already relative"); if ("/" !== f.charAt(0)) throw Error("Cannot calculate a URI relative to another relative URI");
        c.protocol === e.protocol && (c.protocol = null); if (c.username === e.username && c.password === e.password && null === c.protocol && null === c.username && null === c.password && c.hostname === e.hostname && c.port === e.port) c.hostname = null, c.port = null; else return b.build(); if (g === f) return c.path = "", b.build(); a = d.commonPath(b.path(), a.path()); if (!a) return b.build(); e = e.path.substring(a.length).replace(/[^\/]*$/, "").replace(/.*?\//g, "../"); c.path = e + c.path.substring(a.length); return b.build()
    }; e.equals = function (a) {
        var b = this.clone();
        a = new d(a); var c = {}, e = {}, g = {}, h; b.normalize(); a.normalize(); if (b.toString() === a.toString()) return !0; c = b.query(); e = a.query(); b.query(""); a.query(""); if (b.toString() !== a.toString() || c.length !== e.length) return !1; c = d.parseQuery(c, this._parts.escapeQuerySpace); e = d.parseQuery(e, this._parts.escapeQuerySpace); for (h in c) if (r.call(c, h)) { if (!n(c[h])) { if (c[h] !== e[h]) return !1 } else if (!f(c[h], e[h])) return !1; g[h] = !0 } for (h in e) if (r.call(e, h) && !g[h]) return !1; return !0
    }; e.duplicateQueryParameters = function (a) {
        this._parts.duplicateQueryParameters =
        !!a; return this
    }; e.escapeQuerySpace = function (a) { this._parts.escapeQuerySpace = !!a; return this }; return d
});
(function (k, v) { "object" === typeof exports ? module.exports = v(require("./URI")) : "function" === typeof define && define.amd ? define(["./URI"], v) : k.URITemplate = v(k.URI, k) })(this, function (k, v) {
    function m(d) { if (m._cache[d]) return m._cache[d]; if (!(this instanceof m)) return new m(d); this.expression = d; m._cache[d] = this; return this } function q(d) { this.data = d; this.cache = {} } var d = v && v.URITemplate, x = Object.prototype.hasOwnProperty, y = m.prototype, n = {
        "": { prefix: "", separator: ",", named: !1, empty_name_separator: !1, encode: "encode" },
        "+": { prefix: "", separator: ",", named: !1, empty_name_separator: !1, encode: "encodeReserved" }, "#": { prefix: "#", separator: ",", named: !1, empty_name_separator: !1, encode: "encodeReserved" }, ".": { prefix: ".", separator: ".", named: !1, empty_name_separator: !1, encode: "encode" }, "/": { prefix: "/", separator: "/", named: !1, empty_name_separator: !1, encode: "encode" }, ";": { prefix: ";", separator: ";", named: !0, empty_name_separator: !1, encode: "encode" }, "?": { prefix: "?", separator: "&", named: !0, empty_name_separator: !0, encode: "encode" }, "&": {
            prefix: "&",
            separator: "&", named: !0, empty_name_separator: !0, encode: "encode"
        }
    }; m._cache = {}; m.EXPRESSION_PATTERN = /\{([^a-zA-Z0-9%_]?)([^\}]+)(\}|$)/g; m.VARIABLE_PATTERN = /^([^*:]+)((\*)|:(\d+))?$/; m.VARIABLE_NAME_PATTERN = /[^a-zA-Z0-9%_]/; m.expand = function (d, f) {
        var h = n[d.operator], k = h.named ? "Named" : "Unnamed", w = d.variables, s = [], l, e, r; for (r = 0; e = w[r]; r++) l = f.get(e.name), l.val.length ? s.push(m["expand" + k](l, h, e.explode, e.explode && h.separator || ",", e.maxlength, e.name)) : l.type && s.push(""); return s.length ? h.prefix + s.join(h.separator) :
        ""
    }; m.expandNamed = function (d, f, h, m, w, s) { var l = "", e = f.encode; f = f.empty_name_separator; var r = !d[e].length, u = 2 === d.type ? "" : k[e](s), t, n, q; n = 0; for (q = d.val.length; n < q; n++) w ? (t = k[e](d.val[n][1].substring(0, w)), 2 === d.type && (u = k[e](d.val[n][0].substring(0, w)))) : r ? (t = k[e](d.val[n][1]), 2 === d.type ? (u = k[e](d.val[n][0]), d[e].push([u, t])) : d[e].push([void 0, t])) : (t = d[e][n][1], 2 === d.type && (u = d[e][n][0])), l && (l += m), h ? l += u + (f || t ? "=" : "") + t : (n || (l += k[e](s) + (f || t ? "=" : "")), 2 === d.type && (l += u + ","), l += t); return l }; m.expandUnnamed =
    function (d, f, h, m, n) { var s = "", l = f.encode; f = f.empty_name_separator; var e = !d[l].length, r, u, t, q; t = 0; for (q = d.val.length; t < q; t++) n ? u = k[l](d.val[t][1].substring(0, n)) : e ? (u = k[l](d.val[t][1]), d[l].push([2 === d.type ? k[l](d.val[t][0]) : void 0, u])) : u = d[l][t][1], s && (s += m), 2 === d.type && (r = n ? k[l](d.val[t][0].substring(0, n)) : d[l][t][0], s += r, s = h ? s + (f || u ? "=" : "") : s + ","), s += u; return s }; m.noConflict = function () { v.URITemplate === m && (v.URITemplate = d); return m }; y.expand = function (d) {
        var f = ""; this.parts && this.parts.length || this.parse();
        d instanceof q || (d = new q(d)); for (var h = 0, k = this.parts.length; h < k; h++) f += "string" === typeof this.parts[h] ? this.parts[h] : m.expand(this.parts[h], d); return f
    }; y.parse = function () {
        var d = this.expression, f = m.EXPRESSION_PATTERN, h = m.VARIABLE_PATTERN, k = m.VARIABLE_NAME_PATTERN, q = [], s = 0, l, e, r; for (f.lastIndex = 0; ;) {
            e = f.exec(d); if (null === e) { q.push(d.substring(s)); break } else q.push(d.substring(s, e.index)), s = e.index + e[0].length; if (!n[e[1]]) throw Error('Unknown Operator "' + e[1] + '" in "' + e[0] + '"'); if (!e[3]) throw Error('Unclosed Expression "' +
            e[0] + '"'); l = e[2].split(","); for (var u = 0, t = l.length; u < t; u++) { r = l[u].match(h); if (null === r) throw Error('Invalid Variable "' + l[u] + '" in "' + e[0] + '"'); if (r[1].match(k)) throw Error('Invalid Variable Name "' + r[1] + '" in "' + e[0] + '"'); l[u] = { name: r[1], explode: !!r[3], maxlength: r[4] && parseInt(r[4], 10) } } if (!l.length) throw Error('Expression Missing Variable(s) "' + e[0] + '"'); q.push({ expression: e[0], operator: e[1], variables: l })
        } q.length || q.push(d); this.parts = q; return this
    }; q.prototype.get = function (d) {
        var f = this.data,
        h = { type: 0, val: [], encode: [], encodeReserved: [] }, k; if (void 0 !== this.cache[d]) return this.cache[d]; this.cache[d] = h; f = "[object Function]" === String(Object.prototype.toString.call(f)) ? f(d) : "[object Function]" === String(Object.prototype.toString.call(f[d])) ? f[d](d) : f[d]; if (void 0 !== f && null !== f) if ("[object Array]" === String(Object.prototype.toString.call(f))) { k = 0; for (d = f.length; k < d; k++) void 0 !== f[k] && null !== f[k] && h.val.push([void 0, String(f[k])]); h.val.length && (h.type = 3) } else if ("[object Object]" === String(Object.prototype.toString.call(f))) {
            for (k in f) x.call(f,
            k) && void 0 !== f[k] && null !== f[k] && h.val.push([k, String(f[k])]); h.val.length && (h.type = 2)
        } else h.type = 1, h.val.push([void 0, String(f)]); return h
    }; k.expand = function (d, f) { var h = (new m(d)).expand(f); return new k(h) }; return m
});
